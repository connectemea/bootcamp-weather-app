{"version":3,"sources":["context/weatherContext.js","const.js","components/pages/SelectPlace.js","components/pages/WeatherCard.js","App.js","reportWebVitals.js","index.js","components/pages/styles.module.css"],"names":["weatherContext","createContext","WheatherDataProvider","props","useState","weatherData","setWeatherData","Provider","value","children","SelectPlace","place","setPlace","errMsg","setErrMsg","useContext","history","useHistory","className","styles","contentWrapper","container","titleSection","searchSection","name","placeholder","onChange","event","target","searchInput","onClick","url","fetch","then","res","json","result","cod","message","push","error","console","log","SearchBtn","class","WeatherCard","weatherCard","placeName","src","weather","icon","alt","weatherIndicator","tempCount","main","temp","toFixed","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uQAEaA,EAAiBC,0BAEf,SAASC,EAAqBC,GAC3C,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,cAACN,EAAeO,SAAhB,CAAyBC,MAAO,CAAEH,cAAaC,kBAA/C,SACGH,EAAMM,WCTN,I,gBCMQ,SAASC,IAEtB,MAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KAGA,EAA4BR,qBAA5B,mBAAOS,EAAP,KAAeC,EAAf,KAGQR,EAAmBS,qBAAWf,GAA9BM,eAGFU,EAAUC,cA8BhB,OACE,qBAAKC,UAAWC,IAAOC,eAAvB,SACE,sBAAKF,UAAWC,IAAOE,UAAvB,UACE,qBAAKH,UAAWC,IAAOG,aAAvB,yBACA,sBAAKJ,UAAWC,IAAOI,cAAvB,UACE,uBACEC,KAAK,SACLC,YAAY,kBACZjB,MAAOG,EACPe,SApCiB,SAACC,GAAD,OAAWf,EAASe,EAAMC,OAAOpB,QAqClDU,UAAWC,IAAOU,cAGpB,wBACEC,QAASnB,EAtCO,WAExB,IAAMoB,EAAG,2DAAuDpB,EAAvD,+BDzBa,oCC4BtBqB,MAAMD,GAEHE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAElBF,MAEC,SAACG,GACC,GAAmB,QAAfA,EAAOC,IACT,OAAOvB,EAAUsB,EAAOE,SAE1BhC,EAAe8B,GACfpB,EAAQuB,KAAK,eAGf,SAACC,GACCC,QAAQC,IAAI,UAAWF,OAkBgB,KACrCtB,UAAWC,IAAOwB,UAFpB,SAIE,mBAAGC,MAAM,uBAGb,mBAAG1B,UAAWC,IAAON,OAArB,SAA8BA,SChEvB,SAASgC,IAEtB,IAAQxC,EAAgBU,qBAAWf,GAA3BK,YAER,OACE,qBAAKa,UAAWC,IAAOC,eAAvB,SACE,qBAAKF,UAAWC,IAAO2B,YAAvB,UACc,OAAXzC,QAAW,IAAXA,OAAA,EAAAA,EAAamB,OACZ,qCACE,oBAAIN,UAAWC,IAAO4B,UAAtB,SAAkC1C,EAAYmB,OAC9C,qBAEEwB,IAAG,2CAAsC3C,EAAY4C,QAAQ,GAAGC,KAA7D,WACHC,IAAI,cACJjC,UAAWC,IAAOiC,mBAEpB,qBAAIlC,UAAWC,IAAOkC,UAAtB,UACGhD,EAAYiD,KAAKC,KAAKC,QAAQ,GADjC,mBCAGC,MAdf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAACvD,EAAD,WACE,cAAC,IAAD,CAAOwD,OAAK,EAACC,KAAK,IAAIC,UAAWlD,IACjC,cAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,eAAeC,UAAWlD,IAC5C,cAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,WAAWC,UAAWf,YCAnCgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAa,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,UAAY,0BAA0B,aAAe,6BAA6B,cAAgB,8BAA8B,YAAc,4BAA4B,UAAY,0BAA0B,OAAS,uBAAuB,YAAc,4BAA4B,UAAY,0BAA0B,iBAAmB,iCAAiC,UAAY,6B","file":"static/js/main.72e7c20d.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\r\n\r\nexport const weatherContext = createContext();\r\n\r\nexport default function WheatherDataProvider(props) {\r\n  const [weatherData, setWeatherData] = useState([]);\r\n\r\n  return (\r\n    <weatherContext.Provider value={{ weatherData, setWeatherData }}>\r\n      {props.children}\r\n    </weatherContext.Provider>\r\n  );\r\n}\r\n","export const AUTH_TOKEN = '0d376dcd44e835f8eb2eec02692a8e51';","import { useContext } from \"react\";\r\nimport { weatherContext } from \"../../context/weatherContext\";\r\nimport { AUTH_TOKEN } from \"../../const\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styles from \"./styles.module.css\";\r\nexport default function SelectPlace() {\r\n  //state to store place name\r\n  const [place, setPlace] = useState();\r\n\r\n  //state to store error\r\n  const [errMsg, setErrMsg] = useState();\r\n\r\n  //state for weather data (context)\r\n  const { setWeatherData } = useContext(weatherContext);\r\n\r\n  //history to manage the route\r\n  const history = useHistory();\r\n\r\n  //handle search input change\r\n  const handleSearchChange = (event) => setPlace(event.target.value);\r\n\r\n  //handle place selection and api call\r\n  const handlePlaceChange = () => {\r\n    //set API call in openweathermap\r\n    const url = `http://api.openweathermap.org/data/2.5/weather?q=${place}&units=metric&appid=${AUTH_TOKEN}`;\r\n\r\n    //fetching weather data of selected place\r\n    fetch(url)\r\n      //handle req success\r\n      .then((res) => res.json())\r\n\r\n      .then(\r\n        //result object handler\r\n        (result) => {\r\n          if (result.cod === \"404\") {\r\n            return setErrMsg(result.message);\r\n          }\r\n          setWeatherData(result);\r\n          history.push(\"/weather\");\r\n        },\r\n        //error object handler\r\n        (error) => {\r\n          console.log(\"Error::\", error);\r\n        }\r\n      );\r\n  };\r\n  return (\r\n    <div className={styles.contentWrapper}>\r\n      <div className={styles.container}>\r\n        <div className={styles.titleSection}>Weather App</div>\r\n        <div className={styles.searchSection}>\r\n          <input\r\n            name=\"search\"\r\n            placeholder=\"Enter the place\"\r\n            value={place}\r\n            onChange={handleSearchChange}\r\n            className={styles.searchInput}\r\n          />\r\n\r\n          <button\r\n            onClick={place ? handlePlaceChange : null}\r\n            className={styles.SearchBtn}\r\n          >\r\n            <i class=\"fas fa-search\"></i>\r\n          </button>\r\n        </div>\r\n        <p className={styles.errMsg}>{errMsg}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { weatherContext } from \"../../context/weatherContext\";\r\nimport styles from \"./styles.module.css\";\r\nexport default function WeatherCard() {\r\n  //weather state context\r\n  const { weatherData } = useContext(weatherContext);\r\n\r\n  return (\r\n    <div className={styles.contentWrapper}>\r\n      <div className={styles.weatherCard}>\r\n        {weatherData?.name && (\r\n          <>\r\n            <h3 className={styles.placeName}>{weatherData.name}</h3>\r\n            <img\r\n              // To get the weather indicator icon from api\r\n              src={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\r\n              alt=\"weatherIcon\"\r\n              className={styles.weatherIndicator}\r\n            />\r\n            <h4 className={styles.tempCount}>\r\n              {weatherData.main.temp.toFixed(0)} Â°C\r\n            </h4>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SelectPlace from \"./components/pages/SelectPlace\";\nimport WeatherCard from \"./components/pages/WeatherCard\";\nimport WheatherDataProvider from \"./context/weatherContext\";\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <WheatherDataProvider>\n          <Route exact path=\"/\" component={SelectPlace} />\n          <Route exact path=\"/selectPlace\" component={SelectPlace} />\n          <Route exact path=\"/weather\" component={WeatherCard} />\n        </WheatherDataProvider>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentWrapper\":\"styles_contentWrapper__3Lxlw\",\"container\":\"styles_container__2k-Gl\",\"titleSection\":\"styles_titleSection__vnrnd\",\"searchSection\":\"styles_searchSection__2l5Gm\",\"searchInput\":\"styles_searchInput__3osmO\",\"SearchBtn\":\"styles_SearchBtn__13tPP\",\"errMsg\":\"styles_errMsg__3qpZx\",\"weatherCard\":\"styles_weatherCard__2ns9l\",\"placeName\":\"styles_placeName__3ulSD\",\"weatherIndicator\":\"styles_weatherIndicator__18Eyk\",\"tempCount\":\"styles_tempCount__24H0E\"};"],"sourceRoot":""}